# -*- coding: utf-8 -*-
import datetime

import psycopg2
import telebot
import config

from contextlib import closing
from telebot import types
from datetime import datetime
from bot import *

bot = telebot.TeleBot(config.TOKEN)


@bot.message_handler(content_types=['text'])
def get_buttons(message):
    if message.chat.type == 'private':
        if message.text == u'–û –±–æ—Ç–µ':
            bot.send_message(message.chat.id, '–ë–æ—Ç –Ω–∞–ø–∏—Å–∞–Ω –Ω–∞ python3. \nversion <b>3.7</b> (21.05.2020)',
                             parse_mode='html')
            with closing(psycopg2.connect(
                    host='ec2-34-202-88-122.compute-1.amazonaws.com',
                    user='psfxklbqjdysjc',
                    password='eaf1f4c9415008833090228825842986dcac8e6e269b1c9d430b7814a5f9ea97',
                    dbname='daro9jorij2fqh')) as connection:
                with connection.cursor() as cursor:
                    check_role = '''SELECT role_id FROM users WHERE id_telegram = %s'''
                    cursor.execute(check_role, [int(message.from_user.id)])
                    for role in cursor:
                        role_id = role[0]
                    if role_id == 1:
                        markup_admin = types.InlineKeyboardMarkup(row_width=2)
                        item1 = types.InlineKeyboardButton("Messages delete", callback_data='m_delete')
                        item2 = types.InlineKeyboardButton("Amounts delete", callback_data='a_delete')
                        item3 = types.InlineKeyboardButton("Users count", callback_data='u_count')
                        item4 = types.InlineKeyboardButton("Users username", callback_data='u_username')
                        markup_admin.add(item1, item2, item3, item4)
                        bot.send_message(message.chat.id, '–ú–µ–Ω—é –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞', reply_markup=markup_admin)
                connection.commit()
        elif message.text == u'–î–æ–±–∞–≤–∏—Ç—å —Å—É–º–º—É':
            with closing(psycopg2.connect(
                    host='ec2-34-202-88-122.compute-1.amazonaws.com',
                    user='psfxklbqjdysjc',
                    password='eaf1f4c9415008833090228825842986dcac8e6e269b1c9d430b7814a5f9ea97',
                    dbname='daro9jorij2fqh')) as connection:

                with connection.cursor() as cursor:
                    # id_telegram = message.from_user.id
                    check_user = '''SELECT id FROM users WHERE id_telegram = %s'''
                    cursor.execute(check_user, [int(message.from_user.id)])
                    for user_id in cursor:
                        id_user = user_id[0]

                    try:
                        query = '''DELETE FROM amounts WHERE amount is null and user_id = %s'''
                        cursor.execute(query, [int(id_user)])
                    except Exception as e:
                        print(repr(e))
                connection.commit()
                mag = bot.send_message(message.chat.id,
                                       '<b>–í—ã–±–µ—Ä–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏—é:</b>\n–ê–≤—Ç–æ–º–æ–±–∏–ª—å - /auto\n–í—Å–µ –¥–ª—è –¥–æ–º–∞ - /house\n–ó–¥–æ—Ä–æ–≤—å–µ –∏ –∫—Ä–∞—Å–æ—Ç–∞ - '
                                       '/beauty\n–ò—Å–∫—É—Å—Å—Ç–≤–æ - /art\n–ö–æ–º–º—É–Ω–∞–ª—å–Ω—ã–µ –ø–ª–∞—Ç–µ–∂–∏ - /communal\n–°–≤—è–∑—å –∏ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç - /internet\n'
                                       '–û–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ - /education\n–û–¥–µ–∂–¥–∞ –∏ –∞–∫—Å–µ—Å—Å—É–∞—Ä—ã - /clothes\n–û—Ç–¥—ã—Ö –∏ —Ä–∞–∑–≤–ª–µ—á–µ–Ω–∏—è - /entertainment\n'
                                       '–ü–µ—Ä–µ–≤–æ–¥ - /transfer\n–ö—Ä–µ–¥–∏—Ç - /credit\n–ü—É—Ç–µ—à–µ—Å—Ç–≤–∏—è - /travel\n–†–µ—Å—Ç–æ—Ä–∞–Ω—ã –∏ –∫–∞—Ñ–µ - /cafe\n–°—É–ø–µ—Ä–º–∞—Ä–∫–µ—Ç'
                                       ' - /supermarket\n–¢—Ä–∞–Ω—Å–ø–æ—Ä—Ç - /transport\n–ü—Ä–æ—á–∏–µ —Ä–∞—Å—Ö–æ–¥—ã - /other',
                                       parse_mode='html')

                bot.register_next_step_handler(mag, get_category)

        elif message.text == u'–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Ç—Ä–∞—Ç':

            markup = types.InlineKeyboardMarkup(row_width=3)
            item1 = types.InlineKeyboardButton("–°–µ–≥–æ–¥–Ω—è", callback_data='today')
            item2 = types.InlineKeyboardButton("–ó–∞ –Ω–µ–¥–µ–ª—é", callback_data='week')
            item3 = types.InlineKeyboardButton("–ó–∞ –º–µ—Å—è—Ü", callback_data='month')
            item4 = types.InlineKeyboardButton("–ó–∞ –∫–≤–∞—Ä—Ç–∞–ª", callback_data='quarter')
            item5 = types.InlineKeyboardButton("–ó–∞ –ø–æ–ª–≥–æ–¥–∞", callback_data='half')
            item6 = types.InlineKeyboardButton("–ó–∞ –≥–æ–¥", callback_data='year')

            markup.add(item1, item2, item3, item4, item5, item6)

            bot.send_message(message.chat.id, '–í—ã–±–µ—Ä–∏ –ø–µ—Ä–∏–æ–¥ —Ç—Ä–∞—Ç:', reply_markup=markup)

        elif message.text == u'–£–¥–∞–ª–∏—Ç—å —Å—É–º–º—É':
            with closing(psycopg2.connect(
                    host='ec2-34-202-88-122.compute-1.amazonaws.com',
                    user='psfxklbqjdysjc',
                    password='eaf1f4c9415008833090228825842986dcac8e6e269b1c9d430b7814a5f9ea97',
                    dbname='daro9jorij2fqh')) as connection:

                with connection.cursor() as cursor:
                    # id_telegram = message.from_user.id
                    check_user = '''SELECT id FROM users WHERE id_telegram = %s'''
                    cursor.execute(check_user, [int(message.from_user.id)])
                    for user_id in cursor:
                        id_user = user_id[0]

                    date_delete = datetime.now()

                    query1 = '''DELETE FROM amounts WHERE amount is null and user_id = %s'''
                    cursor.execute(query1, [int(id_user)])

                    print(id_user, date_delete)
                    query = '''SELECT max(id) from amounts where user_id = %s and (date(created_at) = current_date)'''
                    cursor.execute(query, [int(id_user)])
                    for max_id in cursor:
                        id_max = max_id[0]
                        print(max_id[0])
                    print(max_id)

                    try:
                        query = '''DELETE FROM amounts WHERE user_id = %s and id = %s'''
                        cursor.execute(query, (int(id_user), int(id_max)))
                        bot.send_message(message.chat.id, '–ü–æ—Å–ª–µ–¥–Ω—è—è —Å—É–º–º–∞ –±—ã–ª–∞ —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω–∞!')

                        query = '''SELECT date(created_at), amount from amounts where user_id = %s and (date(created_at) = current_date)'''
                        cursor.execute(query, [int(id_user)])
                        for date_amount in cursor:
                            date_c = date_amount[0]
                            amount_a = date_amount[1]
                            bot.send_message(message.chat.id, '{} - {} —Ä—É–±.'.format(date_c, amount_a))
                    except Exception:
                        bot.send_message(message.chat.id, '–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è.')
                connection.commit()
        elif message.text == u'–û–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å':
            with closing(psycopg2.connect(
                    host='ec2-34-202-88-122.compute-1.amazonaws.com',
                    user='psfxklbqjdysjc',
                    password='eaf1f4c9415008833090228825842986dcac8e6e269b1c9d430b7814a5f9ea97',
                    dbname='daro9jorij2fqh')) as connection:

                with connection.cursor() as cursor:
                    id_telegram = message.from_user.id
                    if id_telegram == 1017018910:
                        query = '''SELECT message from messages where checked is null and deleted_at is null'''
                        cursor.execute(query)
                        for m_c in cursor:
                            msg_chck = m_c[0]
                            bot.send_message(message.chat.id, '- {}\n'.format(msg_chck), parse_mode='html')
                    else:
                        mag = bot.send_message(message.chat.id,
                                               '–î–æ—Ä–æ–≥–æ–π {0.first_name}, —Å–ø–∞—Å–∏–±–æ, —á—Ç–æ –ø–æ–ª—å–∑—É–µ—à—å—Å—è –±–æ—Ç–æ–º  - –ø–æ–º–æ—à–Ω–∏–∫–æ–º! '
                                               '–í –¥–∞–Ω–Ω–æ–º —Ä–∞–∑–¥–µ–ª–µ —Ç—ã –º–æ–∂–µ—à—å –æ—Å—Ç–∞–≤–∏—Ç—å –æ—Ç–∑—ã–≤ –æ –¥–∞–Ω–Ω–æ–º –±–æ—Ç–µ, –∑–∞–∫–∞–∑–∞—Ç—å —Å–≤–æ–µ–≤–æ–≥–æ –±–æ—Ç–∞ –Ω–∞ python –∏–ª–∏ –∑–∞–∫–∞–∑–∞—Ç—å —Ä–µ–∫–ª–∞–º—É (–û—Å—Ç–∞–≤–ª—è–π—Ç–µ —Å–≤–æ–∏ –¥–∞–Ω–Ω—ã–µ). –ü–∏—à–∏:'.format(
                                                   message.from_user), parse_mode='html')
                        bot.register_next_step_handler(mag, get_message)
                connection.commit()
        else:
            bot.send_message(message.chat.id, '–Ø —Ç–µ–±—è –Ω–µ —Å–æ–≤—Å–µ–º –ø–æ–Ω—è–ª üôÉ\n–ù–∞–∂–º–∏ –Ω—É–∂–Ω—É—é –∫–Ω–æ–ø–∫—É –º–µ–Ω—é.')
